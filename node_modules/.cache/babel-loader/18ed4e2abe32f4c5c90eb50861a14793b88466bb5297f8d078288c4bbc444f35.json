{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Przemek\\\\web drink\\\\src\\\\dashboard\\\\components\\\\IngredientsList.jsx\";\n// import React, { useState, useEffect} from 'react';\n// Bootstrap\nimport { Table } from 'react-bootstrap';\nimport { Container } from \"react-bootstrap\";\nimport { Ingredient } from \"../types/types\";\nimport { addIngredient } from \"../redux/actions/actions\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet xd = 0;\nconst ProductsList = _ref => {\n  let {\n    ingredients,\n    addIngredient\n  } = _ref;\n  if (ingredients[0] !== undefined) {\n    // ingredients.forEach(xd =>{\n    //     console.log(xd.payload.id + \"jazda\" + xd.payload.id);\n    //     console.log(xd.payload.label);\n    //     console.log(xd.payload.unit);\n    // })\n    return /*#__PURE__*/_jsxDEV(TableList, {\n      ingredient: ingredients\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"a\", {\n    children: \"Your ingredient list is empty!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_c = ProductsList;\nconst TableList = ingredient => {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"xd\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Amount of xyz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: ingredients.forEach(ingredient => {\n          console.log(ingredient.payload.label);\n          /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: ingredient.payload.id + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ingredient.payload.label\n            }, ingredient.payload.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_c2 = TableList;\nexport default connect(state => ({\n  ingredients: state.ingredients.ingredientsList\n}), {\n  addIngredient: addIngredient\n})(ProductsList);\nvar _c, _c2;\n$RefreshReg$(_c, \"ProductsList\");\n$RefreshReg$(_c2, \"TableList\");","map":{"version":3,"names":["Table","Container","Ingredient","addIngredient","connect","xd","ProductsList","ingredients","undefined","TableList","ingredient","forEach","console","log","payload","label","id","state","ingredientsList"],"sources":["C:/Users/Przemek/web drink/src/dashboard/components/IngredientsList.jsx"],"sourcesContent":["// import React, { useState, useEffect} from 'react';\r\n// Bootstrap\r\nimport { Table } from 'react-bootstrap';\r\nimport { Container } from \"react-bootstrap\";\r\nimport {Ingredient} from \"../types/types\";\r\nimport {addIngredient} from \"../redux/actions/actions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet xd = 0;\r\nconst ProductsList = ({ingredients, addIngredient}) => {\r\n    if(ingredients[0] !== undefined){\r\n        // ingredients.forEach(xd =>{\r\n        //     console.log(xd.payload.id + \"jazda\" + xd.payload.id);\r\n        //     console.log(xd.payload.label);\r\n        //     console.log(xd.payload.unit);\r\n        // })\r\n        return(\r\n            <TableList ingredient = {ingredients} />\r\n        )\r\n    }\r\n\r\n    return(\r\n        <a>Your ingredient list is empty!</a>\r\n    )\r\n}\r\n\r\nconst TableList = (ingredient) => {\r\n    return(\r\n        <Container>\r\n        <Table striped bordered hover>\r\n            <thead>\r\n                <tr>\r\n                    <th>xd</th>\r\n                    <th>Amount of xyz</th>\r\n                    <th>Delete</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n            {ingredients.forEach(ingredient => {\r\n                console.log(ingredient.payload.label);\r\n                <tr>\r\n                    <td>{ingredient.payload.id + 1}</td>\r\n                    <td key={ingredient.payload.id}>{ingredient.payload.label}</td>\r\n                </tr>\r\n            })\r\n            }\r\n            </tbody>\r\n        </Table>\r\n    </Container>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        ingredients: state.ingredients.ingredientsList,\r\n    }), {\r\n        addIngredient: addIngredient\r\n    }\r\n)(ProductsList);"],"mappings":";AAAA;AACA;AACA,SAASA,KAAK,QAAQ,iBAAiB;AACvC,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAAQC,UAAU,QAAO,gBAAgB;AACzC,SAAQC,aAAa,QAAO,0BAA0B;AACtD,SAAQC,OAAO,QAAO,aAAa;AAAC;AAEpC,IAAIC,EAAE,GAAG,CAAC;AACV,MAAMC,YAAY,GAAG,QAAkC;EAAA,IAAjC;IAACC,WAAW;IAAEJ;EAAa,CAAC;EAC9C,IAAGI,WAAW,CAAC,CAAC,CAAC,KAAKC,SAAS,EAAC;IAC5B;IACA;IACA;IACA;IACA;IACA,oBACI,QAAC,SAAS;MAAC,UAAU,EAAID;IAAY;MAAA;MAAA;MAAA;IAAA,QAAG;EAEhD;EAEA,oBACI;IAAA,UAAG;EAA8B;IAAA;IAAA;IAAA;EAAA,QAAI;AAE7C,CAAC;AAAA,KAfKD,YAAY;AAiBlB,MAAMG,SAAS,GAAIC,UAAU,IAAK;EAC9B,oBACI,QAAC,SAAS;IAAA,uBACV,QAAC,KAAK;MAAC,OAAO;MAAC,QAAQ;MAAC,KAAK;MAAA,wBACzB;QAAA,uBACI;UAAA,wBACI;YAAA,UAAI;UAAE;YAAA;YAAA;YAAA;UAAA,QAAK,eACX;YAAA,UAAI;UAAa;YAAA;YAAA;YAAA;UAAA,QAAK,eACtB;YAAA,UAAI;UAAM;YAAA;YAAA;YAAA;UAAA,QAAK;QAAA;UAAA;UAAA;UAAA;QAAA;MACd;QAAA;QAAA;QAAA;MAAA,QACD,eACR;QAAA,UACCH,WAAW,CAACI,OAAO,CAACD,UAAU,IAAI;UAC/BE,OAAO,CAACC,GAAG,CAACH,UAAU,CAACI,OAAO,CAACC,KAAK,CAAC;UACrC;YAAA,wBACI;cAAA,UAAKL,UAAU,CAACI,OAAO,CAACE,EAAE,GAAG;YAAC;cAAA;cAAA;cAAA;YAAA,QAAM,eACpC;cAAA,UAAiCN,UAAU,CAACI,OAAO,CAACC;YAAK,GAAhDL,UAAU,CAACI,OAAO,CAACE,EAAE;cAAA;cAAA;cAAA;YAAA,QAAiC;UAAA;YAAA;YAAA;YAAA;UAAA,QAC9D;QACT,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QAEM;IAAA;MAAA;MAAA;MAAA;IAAA;EACJ;IAAA;IAAA;IAAA;EAAA,QACA;AAGhB,CAAC;AAAA,MAzBKP,SAAS;AA4Bf,eAAeL,OAAO,CACjBa,KAAK,KAAM;EACRV,WAAW,EAAEU,KAAK,CAACV,WAAW,CAACW;AACnC,CAAC,CAAC,EAAE;EACAf,aAAa,EAAEA;AACnB,CAAC,CACJ,CAACG,YAAY,CAAC;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
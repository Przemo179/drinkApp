{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Przemek\\\\web drink\\\\src\\\\dashboard\\\\components\\\\IngredientsList.jsx\";\n// import React, { useState, useEffect} from 'react';\n// Bootstrap\nimport { Table } from 'react-bootstrap';\nimport { Container } from \"react-bootstrap\";\nimport { Ingredient } from \"../types/types\";\nimport { addIngredient } from \"../redux/actions/actions\";\nimport { connect } from \"react-redux\";\nimport { IngredientRow } from './IngredientRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductsList = _ref => {\n  let {\n    ingredients,\n    addIngredient\n  } = _ref;\n  if (ingredients[0] !== undefined) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Amount of xyz\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: ingredients.map(ingredient => {\n            /*#__PURE__*/_jsxDEV(IngredientRow, {\n              id: ingredient.payload.id,\n              columnIterator: ingredient.payload.id + 1,\n              label: ingredient.payload.label,\n              unit: ingredient.payload.unit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"a\", {\n    children: \"Your ingredient list is empty!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_c = ProductsList;\nexport default connect(state => ({\n  ingredients: state.ingredients.ingredientsList\n}), {\n  addIngredient: addIngredient\n})(ProductsList);\nvar _c;\n$RefreshReg$(_c, \"ProductsList\");","map":{"version":3,"names":["Table","Container","Ingredient","addIngredient","connect","IngredientRow","ProductsList","ingredients","undefined","map","ingredient","payload","id","label","unit","state","ingredientsList"],"sources":["C:/Users/Przemek/web drink/src/dashboard/components/IngredientsList.jsx"],"sourcesContent":["// import React, { useState, useEffect} from 'react';\r\n// Bootstrap\r\nimport { Table } from 'react-bootstrap';\r\nimport { Container } from \"react-bootstrap\";\r\nimport {Ingredient} from \"../types/types\";\r\nimport {addIngredient} from \"../redux/actions/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport { IngredientRow } from './IngredientRow';\r\n\r\nconst ProductsList = ({ingredients, addIngredient}) => {\r\n\r\n\r\n    if(ingredients[0] !== undefined){\r\n        return(\r\n            <Container>\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th></th>\r\n                            <th>Amount of xyz</th>\r\n                            <th>Delete</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {ingredients.map((ingredient) => {\r\n                            <IngredientRow \r\n                                id={ingredient.payload.id}\r\n                                columnIterator={ingredient.payload.id + 1} \r\n                                label={ingredient.payload.label} \r\n                                unit={ingredient.payload.unit} />\r\n                        })}\r\n                    </tbody>\r\n                </Table>\r\n            </Container>\r\n\r\n        )\r\n    }\r\n\r\n    return(\r\n        <a>Your ingredient list is empty!</a>\r\n    )\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        ingredients: state.ingredients.ingredientsList,\r\n    }), {\r\n        addIngredient: addIngredient\r\n    }\r\n)(ProductsList);"],"mappings":";AAAA;AACA;AACA,SAASA,KAAK,QAAQ,iBAAiB;AACvC,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAAQC,UAAU,QAAO,gBAAgB;AACzC,SAAQC,aAAa,QAAO,0BAA0B;AACtD,SAAQC,OAAO,QAAO,aAAa;AACnC,SAASC,aAAa,QAAQ,iBAAiB;AAAC;AAEhD,MAAMC,YAAY,GAAG,QAAkC;EAAA,IAAjC;IAACC,WAAW;IAAEJ;EAAa,CAAC;EAG9C,IAAGI,WAAW,CAAC,CAAC,CAAC,KAAKC,SAAS,EAAC;IAC5B,oBACI,QAAC,SAAS;MAAA,uBACN,QAAC,KAAK;QAAC,OAAO;QAAC,QAAQ;QAAC,KAAK;QAAA,wBACzB;UAAA,uBACI;YAAA,wBACI;cAAA;cAAA;cAAA;YAAA,QAAS,eACT;cAAA,UAAI;YAAa;cAAA;cAAA;cAAA;YAAA,QAAK,eACtB;cAAA,UAAI;YAAM;cAAA;cAAA;cAAA;YAAA,QAAK;UAAA;YAAA;YAAA;YAAA;UAAA;QACd;UAAA;UAAA;UAAA;QAAA,QACD,eACR;UAAA,UACKD,WAAW,CAACE,GAAG,CAAEC,UAAU,IAAK;YAC7B,qBAAC,aAAa;cACV,EAAE,EAAEA,UAAU,CAACC,OAAO,CAACC,EAAG;cAC1B,cAAc,EAAEF,UAAU,CAACC,OAAO,CAACC,EAAE,GAAG,CAAE;cAC1C,KAAK,EAAEF,UAAU,CAACC,OAAO,CAACE,KAAM;cAChC,IAAI,EAAEH,UAAU,CAACC,OAAO,CAACG;YAAK;cAAA;cAAA;cAAA;YAAA,QAAG;UACzC,CAAC;QAAC;UAAA;UAAA;UAAA;QAAA,QACE;MAAA;QAAA;QAAA;QAAA;MAAA;IACJ;MAAA;MAAA;MAAA;IAAA,QACA;EAGpB;EAEA,oBACI;IAAA,UAAG;EAA8B;IAAA;IAAA;IAAA;EAAA,QAAI;AAE7C,CAAC;AAAA,KAhCKR,YAAY;AAkClB,eAAeF,OAAO,CACjBW,KAAK,KAAM;EACRR,WAAW,EAAEQ,KAAK,CAACR,WAAW,CAACS;AACnC,CAAC,CAAC,EAAE;EACAb,aAAa,EAAEA;AACnB,CAAC,CACJ,CAACG,YAAY,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
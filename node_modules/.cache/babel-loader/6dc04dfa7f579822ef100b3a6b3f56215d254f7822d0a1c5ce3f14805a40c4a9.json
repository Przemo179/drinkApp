{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Przemek\\\\web drink\\\\src\\\\dashboard\\\\components\\\\IngredientsSearchBar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { connect } from \"react-redux\";\nimport data from '../ingredientsSource/ingredients.json';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IngredientsSearchBar = _ref => {\n  _s();\n  let {\n    ingredients\n  } = _ref;\n  const [selectedItem, setSelectedItem] = useState([]); // selectedItem is used for \"cleaning input\"\n  // const [jsonData, setJsonData] = useState();\n  // useEffect(() => {\n  //     fetch('../ingredientdsSource/ingredients.json')\n  //     .then((data) => data.json())\n  //     .then((dataJson) => {\n  //         const writeData = JSON.parse('dataJson');\n  //         setJsonData(writeData);\n  //     })\n  // }, )\n  // console.log(jsonData);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Typeahead, {\n      id: \"basic-example\",\n      onChange: () => {},\n      options: data,\n      placeholder: \"Enter ingredients!\",\n      selected: selectedItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(IngredientsSearchBar, \"7nsDTK8qPxbamQoQ32y5vI3zALQ=\");\n_c = IngredientsSearchBar;\nexport default connect(state => ({\n  ingredients: state.ingredients.ingredientsList\n}), {})(IngredientsSearchBar);\nvar _c;\n$RefreshReg$(_c, \"IngredientsSearchBar\");","map":{"version":3,"names":["React","useState","Typeahead","connect","data","IngredientsSearchBar","ingredients","selectedItem","setSelectedItem","state","ingredientsList"],"sources":["C:/Users/Przemek/web drink/src/dashboard/components/IngredientsSearchBar.tsx"],"sourcesContent":["import React, { useState, useEffect} from 'react';\r\nimport { Typeahead } from 'react-bootstrap-typeahead';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport {connect} from \"react-redux\";\r\nimport {ApplicationState} from \"../../store/rootReducer\";\r\nimport {Ingredient} from \"../types/types\";\r\nimport data from '../ingredientsSource/ingredients.json';\r\ntype StateProps = {\r\n    ingredients: Ingredient[]\r\n}\r\ntype Props = StateProps;\r\n\r\nconst IngredientsSearchBar = ({ingredients}: Props) => {\r\n    const [selectedItem, setSelectedItem] = useState([]); // selectedItem is used for \"cleaning input\"\r\n    // const [jsonData, setJsonData] = useState();\r\n    // useEffect(() => {\r\n    //     fetch('../ingredientdsSource/ingredients.json')\r\n    //     .then((data) => data.json())\r\n    //     .then((dataJson) => {\r\n    //         const writeData = JSON.parse('dataJson');\r\n    //         setJsonData(writeData);\r\n    //     })\r\n    // }, )\r\n    // console.log(jsonData);\r\n    \r\n    return <>\r\n            <Typeahead\r\n                id=\"basic-example\"\r\n                onChange={() => {}}\r\n                options={data}\r\n                placeholder=\"Enter ingredients!\"\r\n                selected={selectedItem}\r\n            />\r\n        </>;\r\n};\r\n\r\n\r\nexport default connect(\r\n    (state: ApplicationState) => ({\r\n        ingredients: state.ingredients.ingredientsList,\r\n    }),\r\n    {   }\r\n)(IngredientsSearchBar);"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAkB,OAAO;AACjD,SAASC,SAAS,QAAQ,2BAA2B;AACrD,OAAO,kCAAkC;AACzC,SAAQC,OAAO,QAAO,aAAa;AAGnC,OAAOC,IAAI,MAAM,uCAAuC;AAAC;AAAA;AAMzD,MAAMC,oBAAoB,GAAG,QAA0B;EAAA;EAAA,IAAzB;IAACC;EAAkB,CAAC;EAC9C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACtD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBAAO;IAAA,uBACC,QAAC,SAAS;MACN,EAAE,EAAC,eAAe;MAClB,QAAQ,EAAE,MAAM,CAAC,CAAE;MACnB,OAAO,EAAEG,IAAK;MACd,WAAW,EAAC,oBAAoB;MAChC,QAAQ,EAAEG;IAAa;MAAA;MAAA;MAAA;IAAA;EACzB,iBACH;AACX,CAAC;AAAC,GAtBIF,oBAAoB;AAAA,KAApBA,oBAAoB;AAyB1B,eAAeF,OAAO,CACjBM,KAAuB,KAAM;EAC1BH,WAAW,EAAEG,KAAK,CAACH,WAAW,CAACI;AACnC,CAAC,CAAC,EACF,CAAI,CAAC,CACR,CAACL,oBAAoB,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
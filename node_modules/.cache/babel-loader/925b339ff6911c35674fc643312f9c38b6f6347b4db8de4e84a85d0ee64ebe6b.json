{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Przemek\\\\web drink\\\\src\\\\dashboard\\\\components\\\\IngredientsList.jsx\";\n// import React, { useState, useEffect} from 'react';\n// Bootstrap\nimport { Table } from 'react-bootstrap';\nimport { Container } from \"react-bootstrap\";\nimport { Ingredient } from \"../types/types\";\nimport { addIngredient } from \"../redux/actions/actions\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet xd = 0;\nconst ProductsList = _ref => {\n  let {\n    ingredients,\n    addIngredient\n  } = _ref;\n  function test(ingredient) {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: ingredient.payload.id + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: ingredient.payload.label\n      }, ingredient.payload.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 18\n      }, this)]\n    }, ingredient.payload.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this);\n  }\n  ;\n\n  // {ingredients.forEach(ingredient => {\n  //     console.log(ingredient.payload.label);\n  //     <tr>\n  //         <td>{ingredient.payload.id + 1}</td>\n  //         <td key={ingredient.payload.id}>{ingredient.payload.label}</td>\n  //     </tr>\n  // })}\n  if (ingredients[0] !== undefined) {\n    // ingredients.forEach(xd =>{\n    //     console.log(xd.payload.id + \"jazda\" + xd.payload.id);\n    //     console.log(xd.payload.label);\n    //     console.log(xd.payload.unit);\n    // })\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"xd\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Amount of xyz\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: ingredients.forEach(this.test)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"a\", {\n    children: \"Your ingredient list is empty!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_c = ProductsList;\nexport default connect(state => ({\n  ingredients: state.ingredients.ingredientsList\n}), {\n  addIngredient: addIngredient\n})(ProductsList);\nvar _c;\n$RefreshReg$(_c, \"ProductsList\");","map":{"version":3,"names":["Table","Container","Ingredient","addIngredient","connect","xd","ProductsList","ingredients","test","ingredient","payload","id","label","undefined","forEach","state","ingredientsList"],"sources":["C:/Users/Przemek/web drink/src/dashboard/components/IngredientsList.jsx"],"sourcesContent":["// import React, { useState, useEffect} from 'react';\r\n// Bootstrap\r\nimport { Table } from 'react-bootstrap';\r\nimport { Container } from \"react-bootstrap\";\r\nimport {Ingredient} from \"../types/types\";\r\nimport {addIngredient} from \"../redux/actions/actions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet xd = 0;\r\nconst ProductsList = ({ingredients, addIngredient}) => {\r\n\r\n    function test(ingredient)    {\r\n        return(\r\n            <tr key={ingredient.payload.id}>\r\n                <td>{ingredient.payload.id + 1}</td>\r\n                 <td key={ingredient.payload.id}>{ingredient.payload.label}</td>\r\n            </tr>\r\n        )\r\n    };\r\n\r\n    // {ingredients.forEach(ingredient => {\r\n    //     console.log(ingredient.payload.label);\r\n    //     <tr>\r\n    //         <td>{ingredient.payload.id + 1}</td>\r\n    //         <td key={ingredient.payload.id}>{ingredient.payload.label}</td>\r\n    //     </tr>\r\n    // })}\r\n    if(ingredients[0] !== undefined){\r\n        // ingredients.forEach(xd =>{\r\n        //     console.log(xd.payload.id + \"jazda\" + xd.payload.id);\r\n        //     console.log(xd.payload.label);\r\n        //     console.log(xd.payload.unit);\r\n        // })\r\n        return(\r\n            <Container>\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>xd</th>\r\n                            <th>Amount of xyz</th>\r\n                            <th>Delete</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {ingredients.forEach(this.test)}\r\n                    </tbody>\r\n                </Table>\r\n            </Container>\r\n\r\n        )\r\n    }\r\n\r\n    return(\r\n        <a>Your ingredient list is empty!</a>\r\n    )\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        ingredients: state.ingredients.ingredientsList,\r\n    }), {\r\n        addIngredient: addIngredient\r\n    }\r\n)(ProductsList);"],"mappings":";AAAA;AACA;AACA,SAASA,KAAK,QAAQ,iBAAiB;AACvC,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAAQC,UAAU,QAAO,gBAAgB;AACzC,SAAQC,aAAa,QAAO,0BAA0B;AACtD,SAAQC,OAAO,QAAO,aAAa;AAAC;AAEpC,IAAIC,EAAE,GAAG,CAAC;AACV,MAAMC,YAAY,GAAG,QAAkC;EAAA,IAAjC;IAACC,WAAW;IAAEJ;EAAa,CAAC;EAE9C,SAASK,IAAI,CAACC,UAAU,EAAK;IACzB,oBACI;MAAA,wBACI;QAAA,UAAKA,UAAU,CAACC,OAAO,CAACC,EAAE,GAAG;MAAC;QAAA;QAAA;QAAA;MAAA,QAAM,eACnC;QAAA,UAAiCF,UAAU,CAACC,OAAO,CAACE;MAAK,GAAhDH,UAAU,CAACC,OAAO,CAACC,EAAE;QAAA;QAAA;QAAA;MAAA,QAAiC;IAAA,GAF3DF,UAAU,CAACC,OAAO,CAACC,EAAE;MAAA;MAAA;MAAA;IAAA,QAGzB;EAEb;EAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAGJ,WAAW,CAAC,CAAC,CAAC,KAAKM,SAAS,EAAC;IAC5B;IACA;IACA;IACA;IACA;IACA,oBACI,QAAC,SAAS;MAAA,uBACN,QAAC,KAAK;QAAC,OAAO;QAAC,QAAQ;QAAC,KAAK;QAAA,wBACzB;UAAA,uBACI;YAAA,wBACI;cAAA,UAAI;YAAE;cAAA;cAAA;cAAA;YAAA,QAAK,eACX;cAAA,UAAI;YAAa;cAAA;cAAA;cAAA;YAAA,QAAK,eACtB;cAAA,UAAI;YAAM;cAAA;cAAA;cAAA;YAAA,QAAK;UAAA;YAAA;YAAA;YAAA;UAAA;QACd;UAAA;UAAA;UAAA;QAAA,QACD,eACR;UAAA,UACKN,WAAW,CAACO,OAAO,CAAC,IAAI,CAACN,IAAI;QAAC;UAAA;UAAA;UAAA;QAAA,QAC3B;MAAA;QAAA;QAAA;QAAA;MAAA;IACJ;MAAA;MAAA;MAAA;IAAA,QACA;EAGpB;EAEA,oBACI;IAAA,UAAG;EAA8B;IAAA;IAAA;IAAA;EAAA,QAAI;AAE7C,CAAC;AAAA,KA9CKF,YAAY;AAgDlB,eAAeF,OAAO,CACjBW,KAAK,KAAM;EACRR,WAAW,EAAEQ,KAAK,CAACR,WAAW,CAACS;AACnC,CAAC,CAAC,EAAE;EACAb,aAAa,EAAEA;AACnB,CAAC,CACJ,CAACG,YAAY,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
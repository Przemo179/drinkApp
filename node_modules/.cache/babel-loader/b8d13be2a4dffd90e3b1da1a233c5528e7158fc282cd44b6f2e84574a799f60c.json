{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Przemek\\\\web drink\\\\src\\\\dashboard\\\\components\\\\IngredientsSearchBar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { connect } from \"react-redux\";\nimport { Ingredient } from \"../types/\";\nimport { addIngredient } from \"../redux/actions/actions\";\nimport data from '../ingredientsSource/ingredients.json';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet StateProps = {\n  ingredients: Ingredient\n};\nlet DispatchProps = {\n  addIngredient: addIngredient\n};\nlet Props = StateProps & DispatchProps;\nconst IngredientsSearchBar = _ref => {\n  _s();\n  let {\n    ingredients,\n    addIngredient\n  } = _ref;\n  const [selectedItem, setSelectedItem] = useState(); // selectedItem is used for \"cleaning input\"\n\n  const addSingleIngredient = name => values => {\n    console.log(values[0].label);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Typeahead, {\n      id: \"basic-example\",\n      onChange: addSingleIngredient('test'),\n      options: data.ingredientsList,\n      placeholder: \"Enter ingredients!\",\n      selected: selectedItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(IngredientsSearchBar, \"diAST2z1eLvM0kRpE8WPzCpgBqY=\");\n_c = IngredientsSearchBar;\nexport default connect(state => ({\n  ingredients: state.ingredients.ingredientsList\n}), {\n  addIngredient: addIngredient\n})(IngredientsSearchBar);\nvar _c;\n$RefreshReg$(_c, \"IngredientsSearchBar\");","map":{"version":3,"names":["React","useState","Typeahead","connect","Ingredient","addIngredient","data","StateProps","ingredients","DispatchProps","Props","IngredientsSearchBar","selectedItem","setSelectedItem","addSingleIngredient","name","values","console","log","label","ingredientsList","state"],"sources":["C:/Users/Przemek/web drink/src/dashboard/components/IngredientsSearchBar.tsx"],"sourcesContent":["import React, { useState, useEffect} from 'react';\r\nimport { Typeahead } from 'react-bootstrap-typeahead';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport {connect} from \"react-redux\";\r\nimport {ApplicationState} from \"../../store/rootReducer\";\r\nimport {Ingredient} from \"../types/\";\r\nimport {addIngredient} from \"../redux/actions/actions\";\r\nimport data from '../ingredientsSource/ingredients.json';\r\nlet StateProps = {\r\n    ingredients: Ingredient\r\n}\r\n\r\nlet DispatchProps = {\r\n    addIngredient:  addIngredient\r\n}\r\nlet Props = StateProps & DispatchProps;\r\n\r\nconst IngredientsSearchBar = ({ingredients, addIngredient}) => {\r\n    const [selectedItem, setSelectedItem] = useState(); // selectedItem is used for \"cleaning input\"\r\n\r\n    const addSingleIngredient = (name) => (values) => {\r\n        console.log(values[0].label);\r\n    }\r\n\r\n    return <>\r\n            <Typeahead\r\n                id=\"basic-example\"\r\n                onChange={addSingleIngredient('test')}\r\n                options={data.ingredientsList}\r\n                placeholder=\"Enter ingredients!\"\r\n                selected={selectedItem}\r\n            />\r\n        </>;\r\n};\r\n\r\n\r\n\r\nexport default connect(\r\n    (state: ApplicationState) => ({\r\n        ingredients: state.ingredients.ingredientsList,\r\n    }), {\r\n        addIngredient: addIngredient\r\n    }\r\n)(IngredientsSearchBar);"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAkB,OAAO;AACjD,SAASC,SAAS,QAAQ,2BAA2B;AACrD,OAAO,kCAAkC;AACzC,SAAQC,OAAO,QAAO,aAAa;AAEnC,SAAQC,UAAU,QAAO,WAAW;AACpC,SAAQC,aAAa,QAAO,0BAA0B;AACtD,OAAOC,IAAI,MAAM,uCAAuC;AAAC;AAAA;AACzD,IAAIC,UAAU,GAAG;EACbC,WAAW,EAAEJ;AACjB,CAAC;AAED,IAAIK,aAAa,GAAG;EAChBJ,aAAa,EAAGA;AACpB,CAAC;AACD,IAAIK,KAAK,GAAGH,UAAU,GAAGE,aAAa;AAEtC,MAAME,oBAAoB,GAAG,QAAkC;EAAA;EAAA,IAAjC;IAACH,WAAW;IAAEH;EAAa,CAAC;EACtD,MAAM,CAACO,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,EAAE,CAAC,CAAC;;EAEpD,MAAMa,mBAAmB,GAAIC,IAAI,IAAMC,MAAM,IAAK;IAC9CC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC,CAAC,CAAC,CAACG,KAAK,CAAC;EAChC,CAAC;EAED,oBAAO;IAAA,uBACC,QAAC,SAAS;MACN,EAAE,EAAC,eAAe;MAClB,QAAQ,EAAEL,mBAAmB,CAAC,MAAM,CAAE;MACtC,OAAO,EAAER,IAAI,CAACc,eAAgB;MAC9B,WAAW,EAAC,oBAAoB;MAChC,QAAQ,EAAER;IAAa;MAAA;MAAA;MAAA;IAAA;EACzB,iBACH;AACX,CAAC;AAAC,GAhBID,oBAAoB;AAAA,KAApBA,oBAAoB;AAoB1B,eAAeR,OAAO,CACjBkB,KAAuB,KAAM;EAC1Bb,WAAW,EAAEa,KAAK,CAACb,WAAW,CAACY;AACnC,CAAC,CAAC,EAAE;EACAf,aAAa,EAAEA;AACnB,CAAC,CACJ,CAACM,oBAAoB,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
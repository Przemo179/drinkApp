{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Przemek\\\\web drink\\\\src\\\\dashboard\\\\components\\\\IngredientsList.jsx\";\n// import React, { useState, useEffect} from 'react';\n// Bootstrap\nimport { Table } from 'react-bootstrap';\nimport { Container } from \"react-bootstrap\";\nimport { Ingredient } from \"../types/types\";\nimport { addIngredient, removeIngredient } from \"../redux/actions/actions\";\nimport { connect } from \"react-redux\";\nimport { IngredientRow } from './IngredientRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductsList = _ref => {\n  let {\n    ingredients,\n    addIngredient\n  } = _ref;\n  const deleteRow = id => {\n    console.log(id);\n    removeIngredient({\n      id\n    });\n  };\n  if (ingredients[0] !== undefined) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Amount of\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: ingredients.map(ingredient => /*#__PURE__*/_jsxDEV(IngredientRow, {\n            id: ingredient.payload.id,\n            columnIterator: ingredient.payload.id + 1,\n            label: ingredient.payload.label,\n            unit: ingredient.payload.unit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-danger\",\n        onClick: deleteRow(2),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"a\", {\n    children: \"Your ingredient list is empty!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_c = ProductsList;\nexport default connect(state => ({\n  ingredients: state.ingredients.ingredientsList\n}), {\n  addIngredient: addIngredient,\n  removeIngredient: removeIngredient\n})(ProductsList);\nvar _c;\n$RefreshReg$(_c, \"ProductsList\");","map":{"version":3,"names":["Table","Container","Ingredient","addIngredient","removeIngredient","connect","IngredientRow","ProductsList","ingredients","deleteRow","id","console","log","undefined","map","ingredient","payload","label","unit","state","ingredientsList"],"sources":["C:/Users/Przemek/web drink/src/dashboard/components/IngredientsList.jsx"],"sourcesContent":["// import React, { useState, useEffect} from 'react';\r\n// Bootstrap\r\nimport { Table } from 'react-bootstrap';\r\nimport { Container } from \"react-bootstrap\";\r\nimport { Ingredient } from \"../types/types\";\r\nimport {addIngredient, removeIngredient} from \"../redux/actions/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport { IngredientRow } from './IngredientRow';\r\n\r\nconst ProductsList = ({ingredients, addIngredient}) => {\r\n\r\n    const deleteRow = (id) =>{\r\n        console.log(id);\r\n        removeIngredient({\r\n            id\r\n        })\r\n    }\r\n\r\n    if(ingredients[0] !== undefined){\r\n        return(\r\n            <Container>\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Name</th>\r\n                            <th>Amount of</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {ingredients.map((ingredient) => (\r\n                            <IngredientRow \r\n                                id={ingredient.payload.id}\r\n                                columnIterator={ingredient.payload.id + 1} \r\n                                label={ingredient.payload.label} \r\n                                unit={ingredient.payload.unit}\r\n                            />\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n                <button type=\"button\" className=\"btn btn-danger\" onClick={deleteRow(2)}>X</button>\r\n            </Container>\r\n\r\n        )\r\n    }\r\n\r\n    return(\r\n        <a>Your ingredient list is empty!</a>\r\n    )\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        ingredients: state.ingredients.ingredientsList,\r\n    }), {\r\n        addIngredient: addIngredient,\r\n        removeIngredient: removeIngredient\r\n    }\r\n)(ProductsList);"],"mappings":";AAAA;AACA;AACA,SAASA,KAAK,QAAQ,iBAAiB;AACvC,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,UAAU,QAAQ,gBAAgB;AAC3C,SAAQC,aAAa,EAAEC,gBAAgB,QAAO,0BAA0B;AACxE,SAAQC,OAAO,QAAO,aAAa;AACnC,SAASC,aAAa,QAAQ,iBAAiB;AAAC;AAEhD,MAAMC,YAAY,GAAG,QAAkC;EAAA,IAAjC;IAACC,WAAW;IAAEL;EAAa,CAAC;EAE9C,MAAMM,SAAS,GAAIC,EAAE,IAAI;IACrBC,OAAO,CAACC,GAAG,CAACF,EAAE,CAAC;IACfN,gBAAgB,CAAC;MACbM;IACJ,CAAC,CAAC;EACN,CAAC;EAED,IAAGF,WAAW,CAAC,CAAC,CAAC,KAAKK,SAAS,EAAC;IAC5B,oBACI,QAAC,SAAS;MAAA,wBACN,QAAC,KAAK;QAAC,OAAO;QAAC,QAAQ;QAAC,KAAK;QAAA,wBACzB;UAAA,uBACI;YAAA,wBACI;cAAA,UAAI;YAAC;cAAA;cAAA;cAAA;YAAA,QAAK,eACV;cAAA,UAAI;YAAI;cAAA;cAAA;cAAA;YAAA,QAAK,eACb;cAAA,UAAI;YAAS;cAAA;cAAA;cAAA;YAAA,QAAK,eAClB;cAAA;cAAA;cAAA;YAAA,QAAS;UAAA;YAAA;YAAA;YAAA;UAAA;QACR;UAAA;UAAA;UAAA;QAAA,QACD,eACR;UAAA,UACKL,WAAW,CAACM,GAAG,CAAEC,UAAU,iBACxB,QAAC,aAAa;YACV,EAAE,EAAEA,UAAU,CAACC,OAAO,CAACN,EAAG;YAC1B,cAAc,EAAEK,UAAU,CAACC,OAAO,CAACN,EAAE,GAAG,CAAE;YAC1C,KAAK,EAAEK,UAAU,CAACC,OAAO,CAACC,KAAM;YAChC,IAAI,EAAEF,UAAU,CAACC,OAAO,CAACE;UAAK;YAAA;YAAA;YAAA;UAAA,QAErC;QAAC;UAAA;UAAA;UAAA;QAAA,QACE;MAAA;QAAA;QAAA;QAAA;MAAA,QACJ,eACR;QAAQ,IAAI,EAAC,QAAQ;QAAC,SAAS,EAAC,gBAAgB;QAAC,OAAO,EAAET,SAAS,CAAC,CAAC,CAAE;QAAA,UAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAC1E;EAGpB;EAEA,oBACI;IAAA,UAAG;EAA8B;IAAA;IAAA;IAAA;EAAA,QAAI;AAE7C,CAAC;AAAA,KAzCKF,YAAY;AA2ClB,eAAeF,OAAO,CACjBc,KAAK,KAAM;EACRX,WAAW,EAAEW,KAAK,CAACX,WAAW,CAACY;AACnC,CAAC,CAAC,EAAE;EACAjB,aAAa,EAAEA,aAAa;EAC5BC,gBAAgB,EAAEA;AACtB,CAAC,CACJ,CAACG,YAAY,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}